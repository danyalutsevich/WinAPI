DLL Dynamic Link Library


Библиотека - набор функций в виде отдельного файла/модуля
Компоновка (link) поодключение библиотеки - получение доступа
к ее функциям

Статическая компоновка - подключение функций в исходный код
Динамическая компоновка в исполнимый код (во время выполнения)

Статическая 
	код более самостоятельный не нужны файлы для работы
	код больше за счет включения доп функций, причем оптом - всю 
	библиотеку, независимо от кол ва использованных функций.
	== хорошо для готовой продукции которая исполняется на разных ПК

Динамическая 
	код зависит от доп файлов при копирования/переносе их нужно не забыть
	код вызывает из другого файла, сам при этом короче
	== хорошо для распределенных программ (с приложениями/обновлениями)
	+ немного лучше защита авторских прав - сложнее переделать
	+ совместимость между языками

	Для иллюстраци работы с dll необходимы 2 проекта:
	-- dll продуктом будет dll
	-- winapi/console - сюда нужно скопировать или указать 
	   путь к dll файлу созданому в проекте 1

	Экспортируемые функции оформляются в блоке 
	extern "C"{
	
	}
	в прототипе функции используется декларация 
	__decspec(dllexport)
    главная функция (DllMain) возвращает 1 (TRUE)


	Библиотека подключается командой 
		HANDLE dll = LoadLibraryW(L"dll.dll");
		после чего нужно проверить на NULL
		Для запуска функции извлекается указатель на нее
		с этой целью удобнее определьить тип нового функционального указателя


		typedef long (*sqr_type)(long);
		sqr_type sqr_fun;
	Указатель из модуля (библиотеки) извлекается функцией.
	После извлечения его нужно типизировать
	sqr_fun 
